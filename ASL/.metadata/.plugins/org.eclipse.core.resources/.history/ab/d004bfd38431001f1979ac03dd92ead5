package in.dsa.array.map;

import java.util.HashMap;
import java.util.Map;

public class TwoSum {

	public static void main(String[] args) {

		for(int e : twoSum(new int[]{1,2,3,4,5},9) ){
			System.out.println(e);
		}
	}

	static public int[] twoSum(int[] numbers, int target) {
		
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		
		int[] result = new int[2];
		for (int i = 0; i < numbers.length; i++) {
			
			if (map.containsKey(target - numbers[i])) {
				
				int index = map.get(numbers[i]);
				result[0] = target - index ;
				result[1] = i+1;
				System.out.println("key : "+(target-index)+" | va : "+(i+1));
				break;
			} 
			else {
				map.put(target-numbers[i],numbers[i]);
			}
		}
		System.out.println(map);
		
		for(Map.Entry<Integer, Integer> e : map.entrySet()) {
			
			if(e.getKey()+e.getValue()==target) {
				result[0] = e.getKey();
				result[1] = e.getValue();
				return result;
			}
		}
		return null;
		}
}
